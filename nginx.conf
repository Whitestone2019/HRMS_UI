# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;  # Redirect HTTP â†’ HTTPS
}

# HTTPS server block
server {
    listen 443 ssl;
    server_name localhost;

    # SSL Certificates
    ssl_certificate /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;
    
    # Strong SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;

    # Increase upload limit to avoid 413 error
    client_max_body_size 100M;

    # Static frontend configuration
    root /usr/share/nginx/html;
    index HRMS/index.html;

    # Handle Angular SPA routing
    location / {
        try_files $uri $uri/ /HRMS/index.html;
    }

    # Backend API proxy configuration
    location /HRMS/api/ {
        proxy_pass http://backend:8088/HRMS/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optional: increase timeouts for large uploads
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
    }

    # Optional: Compression for performance
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_proxied any;
    gzip_min_length 10240;
}

# server {
#     listen 80;
#     server_name localhost;
    
#     root /usr/share/nginx/html;
#     index HRMS/index.html;

#     location / {
#         try_files $uri $uri/ /HRMS/index.html;
#     }

#     location /HRMS/api/ {
#         proxy_pass http://backend:8088/HRMS/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }
# }